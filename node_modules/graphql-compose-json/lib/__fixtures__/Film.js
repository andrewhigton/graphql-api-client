"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilmTC = void 0;
const node_fetch_1 = __importDefault(require("node-fetch"));
const index_1 = require("../index");
const People_1 = require("./People");
const restApiResponse = {
    title: 'The Empire Strikes Back',
    episode_id: 5,
    opening_crawl: 'It is a dark time for ...',
    director: 'Irvin Kershner',
    producer: 'Gary Kurtz, Rick McCallum',
    release_date: '1980-05-17',
    characters: [
        'https://swapi.co/api/people/1/',
        'https://swapi.co/api/people/2/',
        'https://swapi.co/api/people/3/',
    ],
};
exports.FilmTC = index_1.composeWithJson('Film', restApiResponse);
exports.FilmTC.addResolver({
    name: 'findById',
    type: exports.FilmTC,
    args: {
        id: 'Int!',
    },
    resolve: (rp) => {
        return node_fetch_1.default(`https://swapi.co/api/films/${rp.args.id}/`).then((r) => r.json());
    },
});
exports.FilmTC.addResolver({
    name: 'findByUrl',
    type: exports.FilmTC,
    args: {
        url: 'String!',
    },
    resolve: (rp) => node_fetch_1.default(rp.args.url).then((r) => r.json()),
});
exports.FilmTC.addResolver({
    name: 'findByUrlList',
    type: [exports.FilmTC],
    args: {
        urls: '[String]!',
    },
    resolve: (rp) => {
        return Promise.all(rp.args.urls.map((url) => node_fetch_1.default(url).then((r) => r.json())));
    },
});
exports.FilmTC.addRelation('characters', {
    resolver: () => People_1.PeopleTC.getResolver('findByUrlList'),
    prepareArgs: {
        urls: (source) => source.characters,
    },
});
exports.FilmTC.addFields({
    currentTime: { type: 'String', resolve: () => Date.now() },
});
//# sourceMappingURL=Film.js.map